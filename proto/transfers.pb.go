// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transfers.proto

package context

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Data struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_transfers_37599eae914fe467, []int{0}
}
func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (dst *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(dst, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Data) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*Data)(nil), "context.data")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TransferService service

type TransferServiceClient interface {
	Send(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Data, error)
}

type transferServiceClient struct {
	cc *grpc.ClientConn
}

func NewTransferServiceClient(cc *grpc.ClientConn) TransferServiceClient {
	return &transferServiceClient{cc}
}

func (c *transferServiceClient) Send(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Data, error) {
	out := new(Data)
	err := grpc.Invoke(ctx, "/context.TransferService/send", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TransferService service

type TransferServiceServer interface {
	Send(context.Context, *Data) (*Data, error)
}

func RegisterTransferServiceServer(s *grpc.Server, srv TransferServiceServer) {
	s.RegisterService(&_TransferService_serviceDesc, srv)
}

func _TransferService_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransferServiceServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/context.TransferService/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransferServiceServer).Send(ctx, req.(*Data))
	}
	return interceptor(ctx, in, info, handler)
}

var _TransferService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "context.TransferService",
	HandlerType: (*TransferServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "send",
			Handler:    _TransferService_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transfers.proto",
}

func init() { proto.RegisterFile("transfers.proto", fileDescriptor_transfers_37599eae914fe467) }

var fileDescriptor_transfers_37599eae914fe467 = []byte{
	// 127 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x29, 0x4a, 0xcc,
	0x2b, 0x4e, 0x4b, 0x2d, 0x2a, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4f, 0xce, 0xcf,
	0x2b, 0x49, 0xad, 0x28, 0x51, 0xd2, 0xe2, 0x62, 0x49, 0x49, 0x2c, 0x49, 0x14, 0xe2, 0xe3, 0x62,
	0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x62, 0xca, 0x4c, 0x11, 0x12, 0xe2, 0x62,
	0x01, 0xc9, 0x4b, 0x30, 0x29, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x46, 0xe6, 0x5c, 0xfc, 0x21,
	0x50, 0x73, 0x82, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85, 0x54, 0xb8, 0x58, 0x8a, 0x53, 0xf3,
	0x52, 0x84, 0x78, 0xf5, 0xa0, 0x06, 0xea, 0x81, 0x4c, 0x93, 0x42, 0xe5, 0x26, 0xb1, 0x81, 0x2d,
	0x35, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x15, 0x3b, 0xa3, 0x12, 0x87, 0x00, 0x00, 0x00,
}
